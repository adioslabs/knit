/* @flow */

export type TJson = {
  [k: string]: mixed,
};

export type TPkgJsonDeps = {
  [k: string]: string
};

export type TSubPkgJson = {
  name: string,
  description?: string,
  browser?: boolean,
  private?: boolean,
  version: string,
};

export type TAuthor = {
  name: string,
  email?: string,
  url?: string,
}

export type TPkgJson = {
  name: string,
  repository: string,
  description?: string,
  private?: boolean,
  build?: boolean,
  version: string,
  engines?: {
    node?: string,
    npm?: string,
  },
  author?: TAuthor,
  contributors?: Array<TAuthor>,
  homepage?: string,
  license?: string,
  bugs?: {
    url: string,
    email?: string,
  },
  files?: Array<string>,
  tags?: Array<string>,
  keywords?: Array<string>,
  dependencies?: TPkgJsonDeps,
  devDependencies?: TPkgJsonDeps,
  peerDependencies?: TPkgJsonDeps,
  optionalDependencies?: TPkgJsonDeps,
  jest?: Object,
  eslintConfig?: Object,
  knit?: {
    needle?: {
      env?: TJson,
    },
  },
};

export type TNeedle = {|
  paths: {|
    rootDir: string,
    data: string,
    modules: string,
    modulesStub: string,
    dist: string,
    distStub: string,
    libStub: string,
    es6Stub: string,
    umdStub: string,
    testsStub: string,
    entry: string,
    entryStub: string,
  |},
  server: {|
    host: string,
    port: number,
    public: string,
  |},
  babel: {|
    modules: true | 'commonjs',
  |},
  proxy: string,
  env: {
    'process.env': {
      NODE_ENV: string,
      BABEL_ENV: string,
      TEST_ENV: string,
    },
    [key: string]: mixed,
  },
  pkg: TPkgJson,
|};

declare module.exports: TNeedle;
